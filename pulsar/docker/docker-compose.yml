version: '2.1'

services:
  zookeeper1:
    image: apachepulsar/pulsar-all:${PULSAR_VERSION}
    hostname: zookeeper1
    container_name: zookeeper1
    ports:
      - "12181:2181"
    environment:
      ZOOKEEPER_ID: 1
      PULSAR_ZK_CONF: /custom-conf/zookeeper.conf
    volumes:
      - ./conf:/custom-conf
      - ./scripts:/scripts
    command: /bin/bash "/scripts/start_zookeeper.sh"

  zookeeper2:
    image: apachepulsar/pulsar-all:${PULSAR_VERSION}
    hostname: zookeeper2
    container_name: zookeeper2
    ports:
      - "22181:2181"
    environment:
      ZOOKEEPER_ID: 2
      PULSAR_ZK_CONF: /custom-conf/zookeeper.conf
    volumes:
      - ./conf:/custom-conf
      - ./scripts:/scripts
    command: /bin/bash "/scripts/start_zookeeper.sh"

  zookeeper3:
    image: apachepulsar/pulsar-all:${PULSAR_VERSION}
    hostname: zookeeper3
    container_name: zookeeper3
    ports:
      - "32181:2181"
    environment:
      ZOOKEEPER_ID: 3
      PULSAR_ZK_CONF: /custom-conf/zookeeper.conf
    volumes:
      - ./conf:/custom-conf
      - ./scripts:/scripts
    command: /bin/bash "/scripts/start_zookeeper.sh"

  setup:
    image: apachepulsar/pulsar-all:${PULSAR_VERSION}
    hostname: setup
    container_name: setup
    restart: on-failure
    volumes:
      - ./conf:/custom-conf
      - ./scripts:/scripts
    command: /bin/bash "/scripts/initialize_metadata.sh"
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3

  bookie1:
    image: apachepulsar/pulsar-all:${PULSAR_VERSION}
    hostname: bookie1
    container_name: bookie1
    restart: on-failure
    ports:
      - "13181:3181"
    environment:
      PULSAR_BOOKKEEPER_CONF: /custom-conf/bookkeeper.conf
    volumes:
      - ./conf:/custom-conf
      - ./scripts:/scripts
    command: /bin/bash "/scripts/start_bookkeeper.sh"
    depends_on:
      - setup

  bookie2:
    image: apachepulsar/pulsar-all:${PULSAR_VERSION}
    hostname: bookie2
    container_name: bookie2
    restart: on-failure
    ports:
      - "23181:3181"
    environment:
      PULSAR_BOOKKEEPER_CONF: /custom-conf/bookkeeper.conf
    volumes:
      - ./conf:/custom-conf
      - ./scripts:/scripts
    command: /bin/bash "/scripts/start_bookkeeper.sh"
    depends_on:
      - setup

  bookie3:
    image: apachepulsar/pulsar-all:${PULSAR_VERSION}
    hostname: bookie3
    container_name: bookie3
    restart: on-failure
    ports:
      - "33181:3181"
    environment:
      PULSAR_BOOKKEEPER_CONF: /custom-conf/bookkeeper.conf
    volumes:
      - ./conf:/custom-conf
      - ./scripts:/scripts
    command: /bin/bash "/scripts/start_bookkeeper.sh"
    depends_on:
      - setup

  broker1:
    image: apachepulsar/pulsar-all:${PULSAR_VERSION}
    hostname: broker1
    container_name: broker1
    restart: on-failure
    environment:
      PULSAR_BROKER_CONF: /custom-conf/broker.conf
    ports:
      - "16650:6650"
      - "18080:8080"
    volumes:
      - ./conf:/custom-conf
      - ./scripts:/scripts
    command: /bin/bash "/scripts/start_broker.sh"
    depends_on:
      - bookie1
      - bookie2
      - bookie3
    healthcheck:
      test: test $$(curl -s -o /dev/null -w %{http_code}  http://localhost:8080/admin/v2/brokers/health) -eq 200 || exit 1
      start_period: 10s
      interval: 20s
      timeout: 18s
      retries: 10

  broker2:
    image: apachepulsar/pulsar-all:${PULSAR_VERSION}
    hostname: broker2
    container_name: broker2
    restart: on-failure
    environment:
      PULSAR_BROKER_CONF: /custom-conf/broker.conf
    ports:
      - "26650:6650"
      - "28080:8080"
    volumes:
      - ./conf:/custom-conf
      - ./scripts:/scripts
    command: /bin/bash "/scripts/start_broker.sh"
    depends_on:
      - bookie1
      - bookie2
      - bookie3
    healthcheck:
      test: test $$(curl -s -o /dev/null -w %{http_code}  http://localhost:8080/admin/v2/brokers/health) -eq 200 || exit 1
      start_period: 10s
      interval: 20s
      timeout: 18s
      retries: 10


  cli:
    image: apachepulsar/pulsar-all:${PULSAR_VERSION}
    hostname: cli
    container_name: cli
    restart: on-failure
    environment:
      PULSAR_CLIENT_CONF: /custom-conf/client.conf
    volumes:
      - ./conf:/custom-conf
    command: /bin/bash
    tty: true
    depends_on:
      - broker1
      - broker2


  event-generator:
    build:
      context: ./client
    image: usecase/pulsar-client:latestlocal
    hostname: event-generator
    container_name: event-generator
    command: event-generator
    volumes:
      - ./test-data:/test-data
    environment:
      PULSAR_SERVICE_URL: "pulsar://broker1:6650,broker2:6650"
      PULSAR_SOURCE_TOPIC: "persistent://public/default/reading-position"
      READER_NAME: "event-generator-reader-1"
      PULSAR_SINK_TOPIC: "persistent://public/default/raw-event"
      PRODUCER_NAME: "event-generator-producer-1"
      PULSAR_WEB_SERVICE_URL: "http://broker1:8080,broker2:8080"
      PATH_TO_CSV: "/test-data/test_events_multiple_customers.csv"

  stream-processor-1:
    build:
      context: ./client
    image: usecase/pulsar-client:latestlocal
    hostname: stream-processor-1
    container_name: stream-processor-1
    command: stream-processor
    environment:
      PULSAR_SERVICE_URL: "pulsar://broker1:6650,broker2:6650"
      PULSAR_SOURCE_TOPIC: "persistent://public/default/raw-event"
      CONSUMER_NAME: "stream-processor-consumer-1"
      SUBSCRIPTION_NAME: "stream-processor-subscription"
      SUBSCRIPTION_TYPE: "Failover"
      SUBSCRIPTION_INITIAL_POSITION: "Earliest"
      PRODUCER_NAME: "stream-processor-producer"

  stream-processor-2:
    build:
      context: ./client
    image: usecase/pulsar-client:latestlocal
    hostname: stream-processor-2
    container_name: stream-processor-2
    command: stream-processor
    environment:
      PULSAR_SERVICE_URL: "pulsar://broker1:6650,broker2:6650"
      PULSAR_SOURCE_TOPIC: "persistent://public/default/raw-event"
      CONSUMER_NAME: "stream-processor-consumer-2"
      SUBSCRIPTION_NAME: "stream-processor-subscription"
      SUBSCRIPTION_TYPE: "Failover"
      SUBSCRIPTION_INITIAL_POSITION: "Earliest"
      PRODUCER_NAME: "stream-processor-producer"


networks:
  default:
    name: pulsar_network
